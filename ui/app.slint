import { TextEdit , GridBox, Button, HorizontalBox , ComboBox, VerticalBox} from "std-widgets.slint";
import "fonts/Segoe_UI.ttf";

export global CustomNoteBuilder_Logic {
    in-out property <image> path;
    in-out property <string> file_name;
    callback change_icon_pressed();
    callback path_clear_pressed();
    callback load_icon();
    callback info_pressed();
    callback build();
}

component BootloaderScreen inherits Rectangle {
    width: 591px;
    height: 307px;
    background: black;
    border-width: 1px;
    TextEdit {
        width: parent.width;
        height: parent.height;
        font-size: 11px;
        text: "Created by KimWang906. Click here to change the text!";
    }
}

component IconStatus inherits Rectangle {
    in property <image> load_path <=> CustomNoteBuilder_Logic.path;
    width: 64px;
    height: 64px;
    background: gray;
    border-width: 2px;
    border-color: black;
    y: 20px;
    Image {
        source: load-path;
        width: parent.width - 2px;
        height: parent.height - 2px;
    }
}

component IconFilenameText inherits Rectangle {
    in property <string> file_name;
    width: 128px;
    height: 20px;
    border-width: 2px;
    border-color: black;
    background: white;
    TextInput {
        x: 3px;
        text: file-name;
        read-only: true;
        font-size: 14px;
        color: black;
    }
}

component IconButton {
    HorizontalBox {
        spacing: 5px;
        Button {
            text: "Change Icon";
            clicked => {
                CustomNoteBuilder-Logic.change-icon-pressed();
            }
        }
        Button {
            text: "Clear";
            clicked => {
                CustomNoteBuilder-Logic.path-clear-pressed();
            }
        }
     }
}

component OptionBox inherits Rectangle {
    in property <string> title;
    // width: 200px;
    // height: 130px;
    Text {
        x: 10px;
        y: 10px;
        width: self.preferred-width;
        height: self.preferred-height;
        text: title;
    }
    Rectangle {
        x: 80px;
        y: 10px;
        width: 128px;
        height: 20px;
        background: white;
        border-width: 2px;
        border-color: black;
        TextInput {
            width: parent.width - 4px; // 테두리 두께를 고려하여 TextInput의 크기를 조절합니다.
            height: parent.height - 4px; // 테두리 두께를 고려하여 TextInput의 크기를 조절합니다.
            color: black;
        }
    }
}

component OptionComboBox inherits Rectangle {
    in property <string> title;
    in property <[string]> values;
    in property <string> curr;
    // width: 200px;
    // height: 130px;
    Text {
        x: 10px;
        y: 10px;
        width: self.preferred-width;
        height: self.preferred-height;
        text: title;
    }
    ComboBox { 
        x: 80px;
        y: 10px;
        current-value: curr;
        model: values;
     }
}

component IconFunc {
    in property <string> load_filename <=> CustomNoteBuilder-Logic.file-name;
    VerticalBox {
        spacing: 0px;
        IconButton {}
        IconFilenameText {
            file-name: load-filename;
        }
    }
}

component CustomOption {
    VerticalBox {
        spacing: 0px;
        OptionBox {
            title: "Text Color:";
        }
        OptionBox {
            title: "Font Color:";
        }
        OptionComboBox {
            title: "Ending:";
            values: ["BSOD", "Reboot", "Nothing"];
            curr: "BSOD";
        }
    }
}

component BuildInfo {
    VerticalBox {
        spacing: 10px;
        Button {
            text: "Build";
            clicked => {
                CustomNoteBuilder-Logic.build();
            }
        }
        Button {
            text: "Info";
            clicked => {
                CustomNoteBuilder-Logic.info-pressed();
            }
        }
    }
}

export component MainWindow inherits Window {
    title: "Custom Note Builder";
    default-font-family: "Segoe UI";
    width: 609px;
    height: 426px;
    HorizontalLayout {
        spacing: 0px;
        GridLayout {
            padding: 5px;
            Row {
                IconStatus {}
            }
            Row {
                IconFunc {
                    col: 1;
                    row: 0;
                }
            }
            Row {
                CustomOption {
                    col: 2;
                    row: 0;
                }
            }
            Row {
                BuildInfo {
                    col: 3;
                    row: 0;
                }
            }
        }
    }

    HorizontalLayout {
        spacing: 0px;
        alignment: center;
        VerticalLayout {
            alignment:center; 
            Rectangle{
                height: 100px;
                background : transparent;
            }
            BootloaderScreen {}
        }
    }
}
